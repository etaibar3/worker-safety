To run you will need to have mongodb and npm downloaded globally on your computer. 
Also you will need install nodemon, which you can do after installing npm with the 
command "npm install -g nodemon".

To run boilerplate:
Run server - cd into server folder and run "npm run db" - leave this open in the background.
Run frontend code - in a new terminal window cd into client folder and and run "npm start".

You'll know it was successfull if it says
"server started successfully connceted to database" in ternminal you ran surver in.
And if it opens a new web tab on http://localhost:3000 that displays react logo 
after running frontend.


The client folder was created using create-react-app.
The server folder just has an index.js file (like a main). We will need to add
sub directories in ./server to organize routes and schemas I think. 


Note as of 6/20/20: need to install react-router-dom package
'npm i react-router-dom'

Update 6/23:
Install packages @hapi/joi, bcrypt, jsonwebtoken, dotenv
run npm i @hapi/joi bcrypt jsonwebtoken dotenv
Updates 6/25:
Install cors in server.
npm i cors

Install axios in client.
npm install axios --save


Update 7/8
Installed sendgrid in server to enable email sending.
npm install --save @sendgrid/mail

Update 7/4:
Install Docker Desktop on you computer.
Keep Docker running.
Run `docker-compose up -d`, this will start and run all services for mongodb and neo4j


Update 7/14:
Install react datepicker for report a case and reserve a desk functionality.
run `npm install react-datepicker --save`

Update 7/15:
Install react-alert for client error notifications.
npm install --save react-alert react-alert-template-basic

Update 7/29:
run "npm install tailwindcss postcss-cli autoprefixer -D"
//run "npm install tailwindcss --save-dev"

Update 8/13:
npm install --save-dev webpack webpack-cli

